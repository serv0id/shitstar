syntax = "proto3";

package widget;

import "base/actions.proto";
import "feature/image/image.proto";
import "base/widget_commons.proto";
import "feature/atom/button.proto";
import "feature/text/text.proto";
import "feature/callout_tag/callout_tag.proto";
import "feature/accessibility/accessibility.proto";
import "widget/button_stack.proto";

option go_package = "github.com/hotstar/hs-core-ui-models-go/widget";
option java_multiple_files = true;
option java_package = "com.hotstar.ui.model.widget";

message HeaderWidget {
    base.WidgetCommons widget_commons = 1;
    
    Data data = 11;
    message Data {
        Header header = 1;
        WidgetAlignment widget_alignment = 2;
    }
    
    reserved 2 to 10;
    
    message Header {
        oneof header {
            RegularTrayHeader regular_tray_header = 1;
            AnchoredTrayHeader anchored_tray_header = 2;
            BrandedTrayHeader branded_tray_header = 3;
            DecoratedTrayHeader decorated_tray_header = 4;
            FilterTrayHeader filter_tray_header = 5;
            SurfaceTrayHeader surface_tray_header = 6;
        }
    }
    
    message RegularTrayHeader {
        string title = 1;
        base.Actions actions = 2;
        feature.atom.Button cta = 3;
        feature.accessibility.Accessibility alt = 4;
    }
    
    message AnchoredTrayHeader {
        string title = 1;
        string sub_title = 2;
        feature.image.Image image = 3;
        base.Actions actions = 4;
        feature.atom.Button cta = 5;
        feature.accessibility.Accessibility alt = 6;
    }
    
    message BrandedTrayHeader {
        feature.image.Image image = 1;
        base.Actions actions = 2;
        feature.atom.Button cta = 3;
        feature.accessibility.Accessibility alt = 4;
    }
    
    message DecoratedTrayHeader {
        repeated feature.callout_tag.CalloutTag elements = 1;
        string sub_title = 2;
        base.Actions actions = 3;
        feature.atom.Button cta = 4;
        feature.accessibility.Accessibility alt = 5;
    }
    
    message SurfaceTrayHeader {
        feature.text.Text title_text = 1;
        feature.text.Text sub_title_text = 2;
        base.Actions actions = 3;
        feature.atom.Button cta = 4;
        feature.accessibility.Accessibility alt = 5;
    }
    
    message FilterTrayHeader {
        Header header = 1;
        
        repeated Item items = 2;
        message Item {
            bool is_selected = 2;
            
            oneof widget {
                ButtonStackWidget button_stack = 1;
            }
        }
    }
    
    enum WidgetAlignment {
        DEFAULT = 0;
        CENTER = 1;
        LEFT = 2;
    }
}
