syntax = "proto3";

package widget;

import "base/template.proto";
import "base/widget_commons.proto";
import "feature/image/image.proto";
import "feature/download/download_info.proto";
import "base/actions.proto";
import "feature/watchlist/watchlist_info.proto";
import "widget/spotlight_info.proto";
import "feature/accessibility/accessibility.proto";
import "feature/image/illustration.proto";
import "feature/remind_me/remind_me_info.proto";
import "feature/tag/tag.proto";

option go_package = "github.com/hotstar/hs-core-ui-models-go/widget";
option java_multiple_files = true;
option java_package = "com.hotstar.ui.model.widget";

message HorizontalContentCardWidget {
    base.Template template = 1 [deprecated = true];
    base.WidgetCommons widget_commons = 2;
    
    Data data = 11;
    message Data {
        string duration = 1;
        feature.image.Image image = 2;
        Footer footer = 3;
        base.Actions actions = 4;
        ExpandedContentPoster expanded_content_poster = 5;
        SpotlightInfoWidget spotlight_info = 6;
        LiveBadge live_badge = 7;
        feature.accessibility.Accessibility alt = 8;
        feature.image.Illustration play = 9;
        WatchlistButton watchlist_button = 10;
        string content_id = 11;
    }
    
    reserved 3 to 10;
    
    message Footer {
        string title = 1;
        string sub_title = 2;
        KebabMenu kebab_menu = 3;
        repeated feature.tag.Tag tags = 4;
    }
    
    message ExpandedContentPoster {
        feature.image.Image image = 1;
        ContentInfo content_info = 2;
    }
    
    message ContentInfo {
        string title = 1;
        feature.image.Image title_cutout = 2;
        string description = 3;
        repeated Tag tags = 4;
        repeated Language languages = 5;
        int32 progress = 6;
        IconLabelButton primary_cta = 7;
        WatchlistButton watchlist_cta = 8;
        IconLabelButton see_more_cta = 9;
        ContentCTAButton primary_button = 10;
    }
    
    message ContentCTAButton {
        oneof cta {
            IconLabelButton cta_button = 1;
            RemindMeCTAButton remind_me_cta_button = 2;
        }
    }
    
    message RemindMeCTAButton {
        feature.remind_me.ReminderInfo remind_me_info = 1;
    }
    
    message IconLabelButton {
        string icon_name = 1;
        string label = 2;
        base.Actions actions = 3;
    }
    
    message WatchlistButton {
        feature.watchlist.WatchlistInfo info = 1;
    }
    
    message Tag {
        string value = 1;
        base.Actions actions = 2;
    }
    
    message Language {
        string key = 1;
        string value = 2;
        bool is_default = 3;
    }
    
    message KebabMenu {
        string kebab_menu_title = 1;
        
        repeated Item items = 2;
        message Item {
            oneof item {
                KebabMenuOption kebab_menu_option = 1;
                DownloadKebabMenuOption download_kebab_menu_option = 2;
                WatchlistKebabMenuOption watchlist_kebab_menu_option = 3;
            }
        }
        
        feature.accessibility.Accessibility alt = 3;
    }
    
    message KebabMenuOption {
        string icon_name = 1;
        string label = 2;
        base.Actions actions = 3;
    }
    
    message DownloadKebabMenuOption {
        feature.download.DownloadInfo downloadInfo = 1 [deprecated = true];
        feature.download.DownloadInfo download_info_option = 3;
        base.Actions actions = 4;
    }
    
    message WatchlistKebabMenuOption {
        feature.watchlist.WatchlistInfo info = 1;
    }
    
    message LiveBadge {
        feature.image.Image text_image = 1;
    }
}
