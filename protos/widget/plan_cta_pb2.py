# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: widget/plan_cta.proto
# Protobuf Python Version: 6.30.2
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import runtime_version as _runtime_version
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
_runtime_version.ValidateProtobufRuntimeVersion(
    _runtime_version.Domain.PUBLIC,
    6,
    30,
    2,
    '',
    'widget/plan_cta.proto'
)
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from base import widget_commons_pb2 as base_dot_widget__commons__pb2
from base import actions_pb2 as base_dot_actions__pb2
from feature.accessibility import accessibility_pb2 as feature_dot_accessibility_dot_accessibility__pb2
from feature.quiz import title_icon_combo_pb2 as feature_dot_quiz_dot_title__icon__combo__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x15widget/plan_cta.proto\x12\x06widget\x1a\x19\x62\x61se/widget_commons.proto\x1a\x12\x62\x61se/actions.proto\x1a)feature/accessibility/accessibility.proto\x1a#feature/quiz/title_icon_combo.proto\"\xf0\x0b\n\rPlanCTAWidget\x12+\n\x0ewidget_commons\x18\x01 \x01(\x0b\x32\x13.base.WidgetCommons\x12(\n\x04\x64\x61ta\x18\x0b \x01(\x0b\x32\x1a.widget.PlanCTAWidget.Data\x1a\xb3\x02\n\x04\x44\x61ta\x12\x15\n\ris_expandable\x18\x01 \x01(\x08\x12\x39\n\x08plan_map\x18\x02 \x03(\x0b\x32\'.widget.PlanCTAWidget.Data.PlanMapEntry\x12\x1d\n\x15\x64\x65\x66\x61ultPlanIdentifier\x18\x03 \x01(\t\x12\x35\n\x08\x63heckbox\x18\x04 \x01(\x0b\x32#.widget.PlanCTAWidget.PaytmCheckbox\x12\x30\n\rsecondary_cta\x18\x05 \x01(\x0b\x32\x19.widget.PlanCTAWidget.CTA\x1aQ\n\x0cPlanMapEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\x30\n\x05value\x18\x02 \x01(\x0b\x32!.widget.PlanCTAWidget.PlanDetails:\x02\x38\x01\x1a\x83\x02\n\x0bPlanDetails\x12\x39\n\rprice_details\x18\x01 \x01(\x0b\x32\".widget.PlanCTAWidget.PriceDetails\x12.\n\x07\x63\x61llout\x18\x02 \x01(\x0b\x32\x1d.widget.PlanCTAWidget.Callout\x12\x33\n\nprice_info\x18\x03 \x01(\x0b\x32\x1f.widget.PlanCTAWidget.PriceInfo\x12&\n\x03\x63ta\x18\x04 \x01(\x0b\x32\x19.widget.PlanCTAWidget.CTA\x12,\n\x06offers\x18\x05 \x01(\x0b\x32\x1c.widget.PlanCTAWidget.Offers\x1a\x89\x02\n\x06Offers\x12,\n\x06header\x18\x01 \x01(\x0b\x32\x1c.feature.quiz.TitleIconCombo\x12=\n\x14\x63ollapsed_state_data\x18\x02 \x01(\x0b\x32\x1f.widget.PlanCTAWidget.StateData\x12<\n\x13\x65xpanded_state_data\x18\x03 \x01(\x0b\x32\x1f.widget.PlanCTAWidget.StateData\x12\x34\n\x0f\x62\x61\x63kgroundColor\x18\x04 \x01(\x0b\x32\x1b.widget.PlanCTAWidget.Color\x12\x1e\n\x07\x61\x63tions\x18\x05 \x01(\x0b\x32\r.base.Actions\x1aJ\n\tStateData\x12/\n\ttext_list\x18\x01 \x03(\x0b\x32\x1c.feature.quiz.TitleIconCombo\x12\x0c\n\x04icon\x18\x02 \x01(\t\x1aQ\n\x0cPriceDetails\x12\x41\n\x11price_description\x18\x01 \x03(\x0b\x32&.widget.PlanCTAWidget.PriceDescription\x1a/\n\x10PriceDescription\x12\x0c\n\x04text\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t\x1a\x66\n\tPriceInfo\x12\r\n\x05value\x18\x01 \x01(\t\x12\x1a\n\x12strikethrough_text\x18\x02 \x01(\t\x12.\n\x07\x63\x61llout\x18\x03 \x01(\x0b\x32\x1d.widget.PlanCTAWidget.Callout\x1at\n\x03\x43TA\x12\x0c\n\x04text\x18\x01 \x01(\t\x12\x0c\n\x04icon\x18\x02 \x01(\t\x12\x1e\n\x07\x61\x63tions\x18\x03 \x01(\x0b\x32\r.base.Actions\x12\x31\n\x03\x61lt\x18\x04 \x01(\x0b\x32$.feature.accessibility.Accessibility\x1a+\n\rPaytmCheckbox\x12\x0c\n\x04icon\x18\x01 \x01(\t\x12\x0c\n\x04text\x18\x02 \x01(\t\x1a&\n\x07\x43\x61llout\x12\x0c\n\x04text\x18\x01 \x01(\t\x12\r\n\x05\x63olor\x18\x02 \x01(\t\x1a\x37\n\x05\x43olor\x12\x15\n\rprimary_color\x18\x01 \x01(\t\x12\x17\n\x0fsecondary_color\x18\x02 \x01(\tJ\x04\x08\x02\x10\x0b\x42O\n\x1b\x63om.hotstar.ui.model.widgetP\x01Z.github.com/hotstar/hs-core-ui-models-go/widgetb\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'widget.plan_cta_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  _globals['DESCRIPTOR']._loaded_options = None
  _globals['DESCRIPTOR']._serialized_options = b'\n\033com.hotstar.ui.model.widgetP\001Z.github.com/hotstar/hs-core-ui-models-go/widget'
  _globals['_PLANCTAWIDGET_DATA_PLANMAPENTRY']._loaded_options = None
  _globals['_PLANCTAWIDGET_DATA_PLANMAPENTRY']._serialized_options = b'8\001'
  _globals['_PLANCTAWIDGET']._serialized_start=161
  _globals['_PLANCTAWIDGET']._serialized_end=1681
  _globals['_PLANCTAWIDGET_DATA']._serialized_start=266
  _globals['_PLANCTAWIDGET_DATA']._serialized_end=573
  _globals['_PLANCTAWIDGET_DATA_PLANMAPENTRY']._serialized_start=492
  _globals['_PLANCTAWIDGET_DATA_PLANMAPENTRY']._serialized_end=573
  _globals['_PLANCTAWIDGET_PLANDETAILS']._serialized_start=576
  _globals['_PLANCTAWIDGET_PLANDETAILS']._serialized_end=835
  _globals['_PLANCTAWIDGET_OFFERS']._serialized_start=838
  _globals['_PLANCTAWIDGET_OFFERS']._serialized_end=1103
  _globals['_PLANCTAWIDGET_STATEDATA']._serialized_start=1105
  _globals['_PLANCTAWIDGET_STATEDATA']._serialized_end=1179
  _globals['_PLANCTAWIDGET_PRICEDETAILS']._serialized_start=1181
  _globals['_PLANCTAWIDGET_PRICEDETAILS']._serialized_end=1262
  _globals['_PLANCTAWIDGET_PRICEDESCRIPTION']._serialized_start=1264
  _globals['_PLANCTAWIDGET_PRICEDESCRIPTION']._serialized_end=1311
  _globals['_PLANCTAWIDGET_PRICEINFO']._serialized_start=1313
  _globals['_PLANCTAWIDGET_PRICEINFO']._serialized_end=1415
  _globals['_PLANCTAWIDGET_CTA']._serialized_start=1417
  _globals['_PLANCTAWIDGET_CTA']._serialized_end=1533
  _globals['_PLANCTAWIDGET_PAYTMCHECKBOX']._serialized_start=1535
  _globals['_PLANCTAWIDGET_PAYTMCHECKBOX']._serialized_end=1578
  _globals['_PLANCTAWIDGET_CALLOUT']._serialized_start=1580
  _globals['_PLANCTAWIDGET_CALLOUT']._serialized_end=1618
  _globals['_PLANCTAWIDGET_COLOR']._serialized_start=1620
  _globals['_PLANCTAWIDGET_COLOR']._serialized_end=1675
# @@protoc_insertion_point(module_scope)
